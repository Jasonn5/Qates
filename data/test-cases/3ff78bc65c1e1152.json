{"uid":"3ff78bc65c1e1152","name":"test_post_task_missing_required_fields","fullName":"tests.task.test_post_create_task#test_post_task_missing_required_fields","historyId":"ef36fc8c8ab096751b9104672018389a","time":{"start":1720652356667,"stop":1720652356974,"duration":307},"status":"failed","statusMessage":"AssertionError: Expected status code 400 but got 403","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7f09c15dd3a0>\n\n    @allure.suite('EspoCRM')\n    @allure.sub_suite('Freddy')\n    @allure.epic('EspoCRM')\n    @allure.feature('Task')\n    @allure.story('Create Task')\n    @allure.tag('author: Freddy')\n    @pytest.mark.functional\n    @pytest.mark.regression\n    @pytest.mark.smoke\n    def test_post_task_missing_required_fields(get_headers):\n        url = TaskEnpoints.post_task_without_params()\n        headers = Auth().auth_valid_credential(get_headers)\n        payload_task.update({'name': \" \"})\n        response = EspoCRMRequest.post(url, headers, payload_task)\n>       assert_status_bad_request(response)\n\ntests/task/test_post_create_task.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>\n\n    def assert_status_bad_request(response):\n>       assert response.status_code == 400, f\"Expected status code 400 but got {response.status_code}\"\nE       AssertionError: Expected status code 400 but got 403\n\ncore/assertions/status.py:26: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_headers","time":{"start":1720652356666,"stop":1720652356667,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Create Task"},{"name":"subSuite","value":"Freddy"},{"name":"epic","value":"EspoCRM"},{"name":"tag","value":"author: Freddy"},{"name":"feature","value":"Task"},{"name":"suite","value":"EspoCRM"},{"name":"tag","value":"smoke"},{"name":"tag","value":"regression"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.task"},{"name":"host","value":"fv-az658-763"},{"name":"thread","value":"2086-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.task.test_post_create_task"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","regression","author: Freddy","smoke"]},"source":"3ff78bc65c1e1152.json","parameterValues":[]}