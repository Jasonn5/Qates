{"uid":"52866ec557e0f4da","name":"test_create_email_draft_invalid_email_format","fullName":"tests.mail_draft.test_post_email_draft#test_create_email_draft_invalid_email_format","historyId":"58002571a159202469f7c19742240434","time":{"start":1720652323224,"stop":1720652323576,"duration":352},"status":"failed","statusMessage":"AssertionError: assert 200 == 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7f09c15dd8a0>\n\n    @allure.suite('EspoCRM')\n    @allure.sub_suite('Diego')\n    @allure.epic('EspoCRM')\n    @allure.feature('Mail Draft')\n    @allure.story('Post Mail Draft')\n    @allure.tag('author: Diego')\n    @pytest.mark.smoke\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_create_email_draft_invalid_email_format(get_headers):\n        url = f\"{BASE_URI}{EndpointEmail.POST_EMAIL_DRAFT.value}\"\n        headers = Auth().auth_valid_credential(get_headers)\n        print(f\"Request Headers: {headers}\")\n        payload_invalid_email_format = load_payload(PayloadPaths.EMAIL_DRAFT_INVALID_EMAIL_FORMAT)\n        response = requests.post(url, headers=headers, json=payload_invalid_email_format)\n        print(f\"Response: {response.text}\")\n>       assert response.status_code == 400\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntests/mail_draft/test_post_email_draft.py:60: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_headers","time":{"start":1720652323224,"stop":1720652323224,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"teardown","time":{"start":1720652323224,"stop":1720652323224,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_headers","time":{"start":1720652323868,"stop":1720652323868,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 200 == 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7f09c15dd8a0>\n\n    @allure.suite('EspoCRM')\n    @allure.sub_suite('Diego')\n    @allure.epic('EspoCRM')\n    @allure.feature('Mail Draft')\n    @allure.story('Post Mail Draft')\n    @allure.tag('author: Diego')\n    @pytest.mark.smoke\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_create_email_draft_invalid_email_format(get_headers):\n        url = f\"{BASE_URI}{EndpointEmail.POST_EMAIL_DRAFT.value}\"\n        headers = Auth().auth_valid_credential(get_headers)\n        print(f\"Request Headers: {headers}\")\n        payload_invalid_email_format = load_payload(PayloadPaths.EMAIL_DRAFT_INVALID_EMAIL_FORMAT)\n        response = requests.post(url, headers=headers, json=payload_invalid_email_format)\n        print(f\"Response: {response.text}\")\n>       assert response.status_code == 400\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntests/mail_draft/test_post_email_draft.py:60: AssertionError","steps":[],"attachments":[{"uid":"c1409967b6f7cc0e","name":"stdout","source":"c1409967b6f7cc0e.txt","type":"text/plain","size":4188}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"teardown::0","time":{"start":1720652323579,"stop":1720652323866,"duration":287},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"subSuite","value":"Diego"},{"name":"tag","value":"author: Diego"},{"name":"epic","value":"EspoCRM"},{"name":"story","value":"Post Mail Draft"},{"name":"suite","value":"EspoCRM"},{"name":"feature","value":"Mail Draft"},{"name":"tag","value":"regression"},{"name":"tag","value":"functional"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests.mail_draft"},{"name":"host","value":"fv-az658-763"},{"name":"thread","value":"2086-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.mail_draft.test_post_email_draft"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","author: Diego","regression","smoke"]},"source":"52866ec557e0f4da.json","parameterValues":[]}