{"uid":"e83b66aa31b3657e","name":"test_get_meetings_order_asc","fullName":"tests.meeting.test_get_meetings#test_get_meetings_order_asc","historyId":"d5d035b49f5e2f2f20d301090792546b","time":{"start":1720641804475,"stop":1720641804566,"duration":91},"status":"failed","statusMessage":"AssertionError: Expected status code 200 but got 403","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7fadc1d7ee80>\n\n    @allure.feature('Presentations - Jeyson Valdivia')\n    @allure.story('Get Presentations')\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_get_meetings_order_asc(get_headers):\n        params = MEETING_PARAM.copy()\n        params['order'] = 'asc'\n        url = MeetingEndpoints.get_meeting_with_params(params=params)\n        headers = Auth().auth_valid_credential(get_headers)\n        response = EspoCRMRequest.get_with_url_headers_params(url, params, headers)\n    \n>       assert_status_code_ok(response)\n\ntests/meeting/test_get_meetings.py:132: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>\n\n    def assert_status_code_ok(response):\n>       assert response.status_code == 200, f\"Expected status code 200 but got {response.status_code}\"\nE       AssertionError: Expected status code 200 but got 403\n\ncore/assertions/status.py:2: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_headers","time":{"start":1720641804475,"stop":1720641804475,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Presentations - Jeyson Valdivia"},{"name":"story","value":"Get Presentations"},{"name":"tag","value":"regression"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.meeting"},{"name":"suite","value":"test_get_meetings"},{"name":"host","value":"fv-az1251-133"},{"name":"thread","value":"2063-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.meeting.test_get_meetings"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","regression"]},"source":"e83b66aa31b3657e.json","parameterValues":[]}