{"uid":"aab3f8853af87b84","name":"test_get_calls_invalid_cookie_in_headers","fullName":"tests.calls.test_get_calls#test_get_calls_invalid_cookie_in_headers","historyId":"c3f511c69ecc4024a93a5874c27cfe2e","time":{"start":1720644695967,"stop":1720644696171,"duration":204},"status":"failed","statusMessage":"AssertionError: Expected status code 401 but got 200","statusTrace":"get_header_cookie = <function get_header_cookie.<locals>._get_headers_withCookie_and_auth at 0x7faa8fa0c9a0>\n\n    @pytest.mark.smoke\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_get_calls_invalid_cookie_in_headers(get_header_cookie):\n        url = EndpointCalls.get_call_without_params()\n        headers = Auth().auth_valid_credential(get_header_cookie)\n        headers['Cookie'] = 'wrongCookie'\n        response = EspoCRMRequest.get_with_url_headers(url, headers)\n>       assert_status_code_unauthorized(response)\n\ntests/calls/test_get_calls.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    def assert_status_code_unauthorized(response):\n>       assert response.status_code == 401, f\"Expected status code 401 but got {response.status_code}\"\nE       AssertionError: Expected status code 401 but got 200\n\ncore/assertions/status.py:18: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_header_cookie","time":{"start":1720644695967,"stop":1720644695967,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"functional"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests.calls"},{"name":"suite","value":"test_get_calls"},{"name":"host","value":"fv-az1106-48"},{"name":"thread","value":"2027-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.calls.test_get_calls"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","regression","smoke"]},"source":"aab3f8853af87b84.json","parameterValues":[]}