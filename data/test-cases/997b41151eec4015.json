{"uid":"997b41151eec4015","name":"test_post_meeting_success","fullName":"tests.meeting.test_post_meeting#test_post_meeting_success","historyId":"4de55e44295c87587b7b16b8e455408b","time":{"start":1720649189056,"stop":1720649189162,"duration":106},"status":"failed","statusMessage":"AssertionError: Expected status code 201 but got 403","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7f0a7a572340>\nbase_payload = {'acceptanceStatus': 'None', 'assignedUserId': '66744ee8d0ffd7849', 'assignedUserName': 'Admin', 'contactsColumns': {}, ...}\nteardown_delete_meeting = []\n\n    @allure.feature('Presentations - Jeyson Valdivia')\n    @allure.story('Create Presentations')\n    @pytest.mark.functional\n    @pytest.mark.smoke\n    def test_post_meeting_success(get_headers, base_payload, teardown_delete_meeting):\n        url = MeetingEndpoints.create_meeting()\n        headers = Auth().auth_valid_credential(get_headers)\n        response = EspoCRMRequest.post_json(url, headers, base_payload)\n    \n>       assert_status_code_created(response)\n\ntests/meeting/test_post_meeting.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>\n\n    def assert_status_code_created(response):\n>       assert response.status_code == 201, f\"Expected status code 201 but got {response.status_code}\"\nE       AssertionError: Expected status code 201 but got 403\n\ncore/assertions/status.py:6: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_headers","time":{"start":1720649189055,"stop":1720649189055,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_payload","time":{"start":1720649189055,"stop":1720649189055,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"teardown_delete_meeting","time":{"start":1720649189056,"stop":1720649189056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected status code 201 but got 403","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7f0a7a572340>\nbase_payload = {'acceptanceStatus': 'None', 'assignedUserId': '66744ee8d0ffd7849', 'assignedUserName': 'Admin', 'contactsColumns': {}, ...}\nteardown_delete_meeting = []\n\n    @allure.feature('Presentations - Jeyson Valdivia')\n    @allure.story('Create Presentations')\n    @pytest.mark.functional\n    @pytest.mark.smoke\n    def test_post_meeting_success(get_headers, base_payload, teardown_delete_meeting):\n        url = MeetingEndpoints.create_meeting()\n        headers = Auth().auth_valid_credential(get_headers)\n        response = EspoCRMRequest.post_json(url, headers, base_payload)\n    \n>       assert_status_code_created(response)\n\ntests/meeting/test_post_meeting.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>\n\n    def assert_status_code_created(response):\n>       assert response.status_code == 201, f\"Expected status code 201 but got {response.status_code}\"\nE       AssertionError: Expected status code 201 but got 403\n\ncore/assertions/status.py:6: AssertionError","steps":[],"attachments":[{"uid":"ed6e95d53d3842a2","name":"stdout","source":"ed6e95d53d3842a2.txt","type":"text/plain","size":17}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"teardown_delete_meeting::0","time":{"start":1720649189168,"stop":1720649189168,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Presentations - Jeyson Valdivia"},{"name":"story","value":"Create Presentations"},{"name":"tag","value":"smoke"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.meeting"},{"name":"suite","value":"test_post_meeting"},{"name":"host","value":"fv-az1538-568"},{"name":"thread","value":"2151-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.meeting.test_post_meeting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","smoke"]},"source":"997b41151eec4015.json","parameterValues":[]}