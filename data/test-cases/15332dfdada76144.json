{"uid":"15332dfdada76144","name":"test_get_tasks_list_ordered_alphabetically_by_name","fullName":"tests.task.test_get_task#test_get_tasks_list_ordered_alphabetically_by_name","historyId":"1843185256d06660058387b6826801c4","time":{"start":1720650256048,"stop":1720650256132,"duration":84},"status":"failed","statusMessage":"AssertionError: Expected status code 200 but got 403","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7ff4d5a9f6a0>\n\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_get_tasks_list_ordered_alphabetically_by_name(get_headers):\n        TASK_PARAM_LIST.update({'orderBy': 'name', 'order': 'asc'})\n        url = f\"{BASE_URI}{EndpointTask.GET_TASK_WITH_PARAMS.value}\"\n        headers = Auth().auth_valid_credential(get_headers)\n        response = requests.get(url, headers=headers)\n>       assert_status_code_ok(response)\n\ntests/task/test_get_task.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>\n\n    def assert_status_code_ok(response):\n>       assert response.status_code == 200, f\"Expected status code 200 but got {response.status_code}\"\nE       AssertionError: Expected status code 200 but got 403\n\ncore/assertions/status.py:2: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_headers","time":{"start":1720650256048,"stop":1720650256048,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.task"},{"name":"suite","value":"test_get_task"},{"name":"host","value":"fv-az1249-263"},{"name":"thread","value":"2075-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.task.test_get_task"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","regression"]},"source":"15332dfdada76144.json","parameterValues":[]}