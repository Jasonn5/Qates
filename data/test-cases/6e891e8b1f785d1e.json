{"uid":"6e891e8b1f785d1e","name":"test_get_tasks_invalid_order_parameter","fullName":"tests.task.test_get_task#test_get_tasks_invalid_order_parameter","historyId":"780d4dde8ad6f7e2ca5fc3c294f37bfe","time":{"start":1720643430604,"stop":1720643430691,"duration":87},"status":"failed","statusMessage":"AssertionError: Expected status code 400 but got 403","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7f4172b6ae80>\n\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_get_tasks_invalid_order_parameter(get_headers):\n        TASK_PARAM.update({'orderBy': 'invalid_field', 'order': 'invalid_order'})\n        url = f\"{BASE_URI}{EndpointTask.GET_TASK_WITHOUT_PARAMS.value}{TASK_PARAM}\"\n        headers = Auth().auth_valid_credential(get_headers)\n        response = requests.get(url, params=TASK_PARAM, headers=headers)\n>       assert_status_bad_request(response)\n\ntests/task/test_get_task.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>\n\n    def assert_status_bad_request(response):\n>       assert response.status_code == 400, f\"Expected status code 400 but got {response.status_code}\"\nE       AssertionError: Expected status code 400 but got 403\n\ncore/assertions/status.py:26: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_headers","time":{"start":1720643430604,"stop":1720643430604,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.task"},{"name":"suite","value":"test_get_task"},{"name":"host","value":"fv-az888-955"},{"name":"thread","value":"2051-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.task.test_get_task"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","regression"]},"source":"6e891e8b1f785d1e.json","parameterValues":[]}