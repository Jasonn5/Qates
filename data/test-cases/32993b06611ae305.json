{"uid":"32993b06611ae305","name":"test_required_first_name_empty","fullName":"tests.contact.test_post_contact#test_required_first_name_empty","historyId":"bcadca18a002621d397b36863c4dbb77","time":{"start":1720641784707,"stop":1720641784884,"duration":177},"status":"failed","statusMessage":"AssertionError: Expected status code 400 but got 200","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7fadc1f496c0>\n\n    @allure.feature('Contact - Nicole Muñoz')\n    @allure.story('Post contact')\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_required_first_name_empty(get_headers):\n        post_payload['firstName'] = \"\"\n        post_payload['lastName'] = modify_first_name_payload()\n        headers = Auth().auth_valid_credential(get_headers)\n        response = EspoCRMRequest.post(url, headers=headers, payload=post_payload)\n>       assert_status_bad_request(response)\n\ntests/contact/test_post_contact.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    def assert_status_bad_request(response):\n>       assert response.status_code == 400, f\"Expected status code 400 but got {response.status_code}\"\nE       AssertionError: Expected status code 400 but got 200\n\ncore/assertions/status.py:26: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_headers","time":{"start":1720641784707,"stop":1720641784707,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Post contact"},{"name":"feature","value":"Contact - Nicole Muñoz"},{"name":"tag","value":"regression"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.contact"},{"name":"suite","value":"test_post_contact"},{"name":"host","value":"fv-az1251-133"},{"name":"thread","value":"2063-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.contact.test_post_contact"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","regression"]},"source":"32993b06611ae305.json","parameterValues":[]}