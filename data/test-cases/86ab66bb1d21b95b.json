{"uid":"86ab66bb1d21b95b","name":"test_get_calls_with_param_select_invalid_data","fullName":"tests.calls.test_get_calls#test_get_calls_with_param_select_invalid_data","historyId":"90cf883d2a80d9e9e0539baa0979c8fa","time":{"start":1720636483523,"stop":1720636483645,"duration":122},"status":"failed","statusMessage":"AssertionError: Expected status code 400 but got 200","statusTrace":"get_header_cookie = <function get_header_cookie.<locals>._get_headers_withCookie_and_auth at 0x7ff06a98b060>\n\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_get_calls_with_param_select_invalid_data(get_header_cookie):\n        url = EndpointCalls.get_call_with_params()\n        headers = Auth().auth_valid_credential(get_header_cookie)\n        test_params = CALL_PARAM.copy()\n        test_params['select'] = 'ยก?=(ยก)??578788787'\n        response = EspoCRMRequest.get_with_url_headers_params(url, params=test_params, headers=headers)\n        print(\"\\n This is the status-code of the response: \" + str(response.status_code))\n>       assert_status_bad_request(response)\n\ntests/calls/test_get_calls.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    def assert_status_bad_request(response):\n>       assert response.status_code == 400, f\"Expected status code 400 but got {response.status_code}\"\nE       AssertionError: Expected status code 400 but got 200\n\ncore/assertions/status.py:26: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_header_cookie","time":{"start":1720636483522,"stop":1720636483523,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected status code 400 but got 200","statusTrace":"get_header_cookie = <function get_header_cookie.<locals>._get_headers_withCookie_and_auth at 0x7ff06a98b060>\n\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_get_calls_with_param_select_invalid_data(get_header_cookie):\n        url = EndpointCalls.get_call_with_params()\n        headers = Auth().auth_valid_credential(get_header_cookie)\n        test_params = CALL_PARAM.copy()\n        test_params['select'] = 'ยก?=(ยก)??578788787'\n        response = EspoCRMRequest.get_with_url_headers_params(url, params=test_params, headers=headers)\n        print(\"\\n This is the status-code of the response: \" + str(response.status_code))\n>       assert_status_bad_request(response)\n\ntests/calls/test_get_calls.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    def assert_status_bad_request(response):\n>       assert response.status_code == 400, f\"Expected status code 400 but got {response.status_code}\"\nE       AssertionError: Expected status code 400 but got 200\n\ncore/assertions/status.py:26: AssertionError","steps":[],"attachments":[{"uid":"b7d101efd5180971","name":"stdout","source":"b7d101efd5180971.txt","type":"text/plain","size":47}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.calls"},{"name":"suite","value":"test_get_calls"},{"name":"host","value":"fv-az700-299"},{"name":"thread","value":"2073-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.calls.test_get_calls"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","regression"]},"source":"86ab66bb1d21b95b.json","parameterValues":[]}