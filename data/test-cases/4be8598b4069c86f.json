{"uid":"4be8598b4069c86f","name":"test_get_activity_invalid_from","fullName":"tests.calendar.test_get_activities#test_get_activity_invalid_from","historyId":"c343f4c2a88cb8ad15862be9b891f5e0","time":{"start":1720649791512,"stop":1720649791603,"duration":91},"status":"failed","statusMessage":"AssertionError: Expected status code 400 but got 403","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7fa436f02b60>\nsetup_data = {'from': 'michi', 'to': '2024-07-01 04:00'}\n\n    @allure.feature('Activity - Nicole Muñoz')\n    @allure.story('Get activity')\n    @pytest.mark.functional\n    @pytest.mark.regression\n    @pytest.mark.regression\n    def test_get_activity_invalid_from(get_headers, setup_data):\n        setup_data['from'] = 'michi'\n        headers = Auth().auth_valid_credential(get_headers)\n        response = EspoCRMRequest.get_with_url_headers_params(url, params=setup_data, headers=headers)\n    \n>       assert_status_bad_request(response)\n\ntests/calendar/test_get_activities.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>\n\n    def assert_status_bad_request(response):\n>       assert response.status_code == 400, f\"Expected status code 400 but got {response.status_code}\"\nE       AssertionError: Expected status code 400 but got 403\n\ncore/assertions/status.py:26: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_data","time":{"start":1720649791512,"stop":1720649791512,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"get_headers","time":{"start":1720649791512,"stop":1720649791512,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"get_headers","time":{"start":1720649796630,"stop":1720649796630,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"afterStages":[{"name":"setup_data::finalizer","time":{"start":1720649791633,"stop":1720649791633,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"Activity - Nicole Muñoz"},{"name":"story","value":"Get activity"},{"name":"tag","value":"regression"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.calendar"},{"name":"suite","value":"test_get_activities"},{"name":"host","value":"fv-az530-126"},{"name":"thread","value":"2053-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.calendar.test_get_activities"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","regression"]},"source":"4be8598b4069c86f.json","parameterValues":[]}