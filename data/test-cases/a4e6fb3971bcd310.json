{"uid":"a4e6fb3971bcd310","name":"test_delete_non_existent_meeting","fullName":"tests.meeting.test_delete_meeting#test_delete_non_existent_meeting","historyId":"6876757eb0f1eb4bb9b33a45e6a67af8","time":{"start":1720652337876,"stop":1720652338204,"duration":328},"status":"failed","statusMessage":"AssertionError: Expected status code 404 but got 403","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7f09c15de0c0>\n\n    @allure.suite('EspoCRM')\n    @allure.sub_suite('Jeyson')\n    @allure.epic('EspoCRM')\n    @allure.feature('Meetings')\n    @allure.story('Delete Meeting')\n    @allure.tag('author: Jeyson')\n    @allure.feature('Presentations - Jeyson Valdivia')\n    @allure.story('Delete Presentations')\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_delete_non_existent_meeting(get_headers):\n        non_existent_meeting_id = \"nonExistentMeetingId\"\n        url = MeetingEndpoints.delete_meeting(non_existent_meeting_id)\n        headers = Auth().auth_valid_credential(get_headers)\n        response = EspoCRMRequest.delete(url, headers)\n>       assert_status_code_not_found(response)\n\ntests/meeting/test_delete_meeting.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>\n\n    def assert_status_code_not_found(response):\n>       assert response.status_code == 404, f\"Expected status code 404 but got {response.status_code}\"\nE       AssertionError: Expected status code 404 but got 403\n\ncore/assertions/status.py:10: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_headers","time":{"start":1720652337875,"stop":1720652337875,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected status code 404 but got 403","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7f09c15de0c0>\n\n    @allure.suite('EspoCRM')\n    @allure.sub_suite('Jeyson')\n    @allure.epic('EspoCRM')\n    @allure.feature('Meetings')\n    @allure.story('Delete Meeting')\n    @allure.tag('author: Jeyson')\n    @allure.feature('Presentations - Jeyson Valdivia')\n    @allure.story('Delete Presentations')\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_delete_non_existent_meeting(get_headers):\n        non_existent_meeting_id = \"nonExistentMeetingId\"\n        url = MeetingEndpoints.delete_meeting(non_existent_meeting_id)\n        headers = Auth().auth_valid_credential(get_headers)\n        response = EspoCRMRequest.delete(url, headers)\n>       assert_status_code_not_found(response)\n\ntests/meeting/test_delete_meeting.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>\n\n    def assert_status_code_not_found(response):\n>       assert response.status_code == 404, f\"Expected status code 404 but got {response.status_code}\"\nE       AssertionError: Expected status code 404 but got 403\n\ncore/assertions/status.py:10: AssertionError","steps":[],"attachments":[{"uid":"4cb5378458ee83a8","name":"stdout","source":"4cb5378458ee83a8.txt","type":"text/plain","size":106}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"EspoCRM"},{"name":"tag","value":"author: Jeyson"},{"name":"story","value":"Delete Presentations"},{"name":"subSuite","value":"Jeyson"},{"name":"feature","value":"Meetings"},{"name":"suite","value":"EspoCRM"},{"name":"feature","value":"Presentations - Jeyson Valdivia"},{"name":"story","value":"Delete Meeting"},{"name":"tag","value":"regression"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.meeting"},{"name":"host","value":"fv-az658-763"},{"name":"thread","value":"2086-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.meeting.test_delete_meeting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","regression","author: Jeyson"]},"source":"a4e6fb3971bcd310.json","parameterValues":[]}