{"uid":"20d37d3438ff74c0","name":"test_get_meetings_invalid_param","fullName":"tests.meeting.test_get_meetings#test_get_meetings_invalid_param","historyId":"170312cfc334a2e24025304405cdb1e9","time":{"start":1720649188946,"stop":1720649189049,"duration":103},"status":"failed","statusMessage":"AssertionError: Expected status code 400 but got 403","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7f0a7a573920>\n\n    @allure.feature('Presentations - Jeyson Valdivia')\n    @allure.story('Get Presentations')\n    @pytest.mark.functional\n    def test_get_meetings_invalid_param(get_headers):\n        params = MEETING_PARAM.copy()\n        params['invalidParam'] = 'value'\n        url = MeetingEndpoints.get_meeting_with_params(params=params)\n        headers = Auth().auth_valid_credential(get_headers)\n        response = EspoCRMRequest.get_with_url_headers_params(url, params, headers)\n    \n>       assert_status_bad_request(response)\n\ntests/meeting/test_get_meetings.py:150: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>\n\n    def assert_status_bad_request(response):\n>       assert response.status_code == 400, f\"Expected status code 400 but got {response.status_code}\"\nE       AssertionError: Expected status code 400 but got 403\n\ncore/assertions/status.py:26: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_headers","time":{"start":1720649188946,"stop":1720649188946,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Presentations - Jeyson Valdivia"},{"name":"story","value":"Get Presentations"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.meeting"},{"name":"suite","value":"test_get_meetings"},{"name":"host","value":"fv-az1538-568"},{"name":"thread","value":"2151-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.meeting.test_get_meetings"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional"]},"source":"20d37d3438ff74c0.json","parameterValues":[]}