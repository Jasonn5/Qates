{"uid":"ccdeb81532d00517","name":"test_delete_call_with_invalid_cookie","fullName":"tests.calls.test_delete_call#test_delete_call_with_invalid_cookie","historyId":"6adcb5728f40eff15f02fcfeb1126f52","time":{"start":1720652293016,"stop":1720652293344,"duration":328},"status":"failed","statusMessage":"AssertionError: Expected status code 401 but got 200","statusTrace":"setup_create_call = ({'Authorization': 'Basic YWRtaW46YWRtaW4=', 'Cookie': 'auth-token-secret=b51d5dc9ee9eafa0aaa329612425ad63; auth-token=288eacade0b7e816569a85a5d07f165a'}, '668f1204e52bebefd')\nget_header_cookie = <function get_header_cookie.<locals>._get_headers_withCookie_and_auth at 0x7f09c15694e0>\n\n    @allure.suite('EspoCRM')\n    @allure.sub_suite('Alison')\n    @allure.epic('EspoCRM')\n    @allure.feature('Calls')\n    @allure.story('Delete Call')\n    @allure.tag('author: Alison')\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_delete_call_with_invalid_cookie(setup_create_call, get_header_cookie):\n        headers, id_of_new_call = setup_create_call\n        print(\"This is the headers before: \" + str(headers))\n        invalid_cookie_header = deepcopy(headers)\n        invalid_cookie_header['Cookie'] = 'auth-token-secret=wrong_secret; auth-token=wrong_token'\n        print(\"This is the headers sent: \" + str(invalid_cookie_header))\n    \n        url_delete = EndpointCalls.delete_call(id_of_new_call)\n        response_delete = EspoCRMRequest.delete(url_delete, invalid_cookie_header)\n>       assert_status_code_unauthorized(response_delete)\n\ntests/calls/test_delete_call.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    def assert_status_code_unauthorized(response):\n>       assert response.status_code == 401, f\"Expected status code 401 but got {response.status_code}\"\nE       AssertionError: Expected status code 401 but got 200\n\ncore/assertions/status.py:18: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_payload_required_data_post","time":{"start":1720652288617,"stop":1720652288617,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_header_cookie","time":{"start":1720652292650,"stop":1720652292650,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_create_call","time":{"start":1720652292650,"stop":1720652293016,"duration":366},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected status code 401 but got 200","statusTrace":"setup_create_call = ({'Authorization': 'Basic YWRtaW46YWRtaW4=', 'Cookie': 'auth-token-secret=b51d5dc9ee9eafa0aaa329612425ad63; auth-token=288eacade0b7e816569a85a5d07f165a'}, '668f1204e52bebefd')\nget_header_cookie = <function get_header_cookie.<locals>._get_headers_withCookie_and_auth at 0x7f09c15694e0>\n\n    @allure.suite('EspoCRM')\n    @allure.sub_suite('Alison')\n    @allure.epic('EspoCRM')\n    @allure.feature('Calls')\n    @allure.story('Delete Call')\n    @allure.tag('author: Alison')\n    @pytest.mark.functional\n    @pytest.mark.regression\n    def test_delete_call_with_invalid_cookie(setup_create_call, get_header_cookie):\n        headers, id_of_new_call = setup_create_call\n        print(\"This is the headers before: \" + str(headers))\n        invalid_cookie_header = deepcopy(headers)\n        invalid_cookie_header['Cookie'] = 'auth-token-secret=wrong_secret; auth-token=wrong_token'\n        print(\"This is the headers sent: \" + str(invalid_cookie_header))\n    \n        url_delete = EndpointCalls.delete_call(id_of_new_call)\n        response_delete = EspoCRMRequest.delete(url_delete, invalid_cookie_header)\n>       assert_status_code_unauthorized(response_delete)\n\ntests/calls/test_delete_call.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    def assert_status_code_unauthorized(response):\n>       assert response.status_code == 401, f\"Expected status code 401 but got {response.status_code}\"\nE       AssertionError: Expected status code 401 but got 200\n\ncore/assertions/status.py:18: AssertionError","steps":[],"attachments":[{"uid":"87d139847a7097cc","name":"stdout","source":"87d139847a7097cc.txt","type":"text/plain","size":445}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup_create_call::0","time":{"start":1720652293349,"stop":1720652293349,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"EspoCRM"},{"name":"story","value":"Delete Call"},{"name":"feature","value":"Calls"},{"name":"suite","value":"EspoCRM"},{"name":"tag","value":"author: Alison"},{"name":"subSuite","value":"Alison"},{"name":"tag","value":"regression"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.calls"},{"name":"host","value":"fv-az658-763"},{"name":"thread","value":"2086-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.calls.test_delete_call"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","regression","author: Alison"]},"source":"ccdeb81532d00517.json","parameterValues":[]}